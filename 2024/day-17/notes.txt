2
4
1
3
7
5
0
3
1
4
4
7
5
5
3
0

0: B = A % 8,
2: B = B ^ 3,
4: C = A / ( 2 ** B )
6: A = A / (2 ** 3)
8: B = B ^ A
10: B = B ^ C
12: output(B % 8)
14: if A != 0 { instruction = 0 }

(A,0,0)
(A, A % 8, 0)
(A, (A % 8) ^ 3, 0)
(A, (A % 8) ^ 3, 0)
(A, (A % 8) ^ 3, A / (2 ** ((A % 8) ^ 3)))
(A / 8, (A % 8) ^ 3, A / (2 ** ((A % 8) ^ 3)))
(A / 8, ((A % 8) ^ 3) ^ (A / 8), A / (2 ** ((A % 8) ^ 3)))
(A / 8, (((A % 8) ^ 3) ^ (A / 8)) ^ (A / (2 ** ((A % 8) ^ 3))), A / (2 ** ((A % 8) ^ 3)))


A % 8:
0: 3
1: (2 ^ (A / 8)) ^ (A / 4) % 8
2: (1 ^ (A / 8)) ^ (A / 2) % 8
3: (A / 8) ^ 3
4: (7 ^ (A / 8)) ^ (A / (2 ** 7)) % 8
5: (6 ^ (A / 8)) ^ (A / (2 ** 6)) % 8
6: (5 ^ (A / 8)) ^ (A / (2 ** 5)) % 8
7: (4 ^ (A / 8)) ^ (A / (2 ** 4)) % 8

(((A % 8) ^ 3) ^ (A / 8)) ^ (A / (2 ** ((A % 8) ^ 3)))

----
1. needs 0:
0: 3,
1: 2,
2: 3,
3: 0
4: 7,
5: 6,
6: 5,
7: 4,
select 1
----

